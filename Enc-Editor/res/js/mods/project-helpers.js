// Generated by IcedCoffeeScript 1.6.2d
(function() {
  var Project, domain, fs, gate, iced, nedb, p, __iced_k, __iced_k_noop, _dbs, _dirs;

  iced = require('iced-coffee-script').iced;
  __iced_k = __iced_k_noop = function() {};

  fs = require('fs-extra');

  gate = require('gate');

  nedb = require('nedb');

  domain = require('domain');

  _dirs = ['/bin', '/res/audio/bgm', '/res/audio/me', '/res/audio/se', '/res/db', '/res/image/background', '/res/image/character', '/res/image/item', '/res/image/etc', '/res/image/ui', '/res/etc'];

  _dbs = ['character', 'script', 'snippet', 'audio', 'object', 'image', 'system'];

  Project = (function() {
    function Project(path) {
      var db, dir, _i, _len;
      this.isReady = false;
      this.path = path;
      this.dirs = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = _dirs.length; _i < _len; _i++) {
          dir = _dirs[_i];
          _results.push(path + dir);
        }
        return _results;
      })();
      this.dbpath = {};
      for (_i = 0, _len = _dbs.length; _i < _len; _i++) {
        db = _dbs[_i];
        this.dbpath[db] = path + _dirs[4] + '/' + db + '.db';
      }
    }

    Project.prototype.getReady = function(cb) {
      var d, db, dir, dir_stat, is_new, path, ___iced_passed_deferral, __iced_deferrals, __iced_k,
        _this = this;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      d = domain.create();
      d.on('error', function(err) {
        d.dispose();
        return cb(err);
      });
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          parent: ___iced_passed_deferral,
          filename: "project-helpers.coffee",
          funcname: "Project.getReady"
        });
        fs.stat(_this.path, d.intercept(__iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              return dir_stat = arguments[0];
            };
          })(),
          lineno: 39
        })));
        __iced_deferrals._fulfill();
      })(function() {
        if (!dir_stat.isDirectory()) {
          throw new Error('Not a directory');
        }
        (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "project-helpers.coffee",
            funcname: "Project.getReady"
          });
          fs.exists(_this.path + '/.encproj', __iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                return is_new = arguments[0];
              };
            })(),
            lineno: 42
          }));
          __iced_deferrals._fulfill();
        })(function() {
          (function(__iced_k) {
            if (!is_new) {
              (function(__iced_k) {
                __iced_deferrals = new iced.Deferrals(__iced_k, {
                  parent: ___iced_passed_deferral,
                  filename: "project-helpers.coffee",
                  funcname: "Project.getReady"
                });
                fs.mkdir(_this.path + '/.encproj', d.intercept(__iced_deferrals.defer({
                  lineno: 44
                })));
                __iced_deferrals._fulfill();
              })(__iced_k);
            } else {
              return __iced_k();
            }
          })(function() {
            (function(__iced_k) {
              var _i, _len, _ref;
              __iced_deferrals = new iced.Deferrals(__iced_k, {
                parent: ___iced_passed_deferral,
                filename: "project-helpers.coffee",
                funcname: "Project.getReady"
              });
              _ref = _this.dirs;
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                dir = _ref[_i];
                fs.mkdirp(dir, d.intercept(__iced_deferrals.defer({
                  lineno: 46
                })));
              }
              __iced_deferrals._fulfill();
            })(function() {
              _this.dbs = {};
              (function(__iced_k) {
                var _i, _k, _keys, _ref, _results, _while;
                _ref = _this.dbpath;
                _keys = (function() {
                  var _results1;
                  _results1 = [];
                  for (_k in _ref) {
                    _results1.push(_k);
                  }
                  return _results1;
                })();
                _i = 0;
                _results = [];
                _while = function(__iced_k) {
                  var _break, _continue, _next;
                  _break = function() {
                    return __iced_k(_results);
                  };
                  _continue = function() {
                    return iced.trampoline(function() {
                      ++_i;
                      return _while(__iced_k);
                    });
                  };
                  _next = function(__iced_next_arg) {
                    _results.push(__iced_next_arg);
                    return _continue();
                  };
                  if (!(_i < _keys.length)) {
                    return _break();
                  } else {
                    db = _keys[_i];
                    path = _ref[db];
                    _this.dbs[db] = db = new nedb({
                      filename: path
                    });
                    (function(__iced_k) {
                      __iced_deferrals = new iced.Deferrals(__iced_k, {
                        parent: ___iced_passed_deferral,
                        filename: "project-helpers.coffee",
                        funcname: "Project.getReady"
                      });
                      db.loadDatabase(d.intercept(__iced_deferrals.defer({
                        lineno: 50
                      })));
                      __iced_deferrals._fulfill();
                    })(_next);
                  }
                };
                _while(__iced_k);
              })(function() {
                return cb(null);
              });
            });
          });
        });
      });
    };

    return Project;

  })();

  module.exports = Project;

  p = new Project('D:/Encouragement_System/Enc-Project');

  p.getReady(function() {
    return console.dir(arguments);
  });

}).call(this);
